---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "ethnode.fullname" . }}-{{ .Values.global.network }}-{{ .Values.global.env }}-post-delete-hook
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": "hook-succeeded"
  labels:
    app.kubernetes.io/name: post-delete-hook
    app.kubernetes.io/component: job
    {{- include "ethnode.labels" . | nindent 4 }}
spec:
  backoffLimit: 1
  completions: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: post-delete-hook
        app.kubernetes.io/component: job
        app.kubernetes.io/release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ include "ethnode.fullname" . }}-{{ .Values.global.network }}-{{ .Values.global.env }}-hooks
      restartPolicy: "OnFailure"
      containers:
        - name: post-delete-hook
          image: consensys/quorum-k8s-hooks:22.04
          imagePullPolicy: Always
          securityContext:
            runAsUser: 0
          command:
            - /bin/bash
            - -c
          args:
            - |

              echo "{{ include "ethnode.fullname" . }}-{{ .Values.global.network }}-{{ .Values.global.env }} post-delete hook ..."

              echo "create jwt secret ..."
              rm /tmp/jwtSecret.hex
              openssl rand -hex 32 | tr -d "\n" > /tmp/jwtSecret.hex

              # create a secret if it doesn't already exist
              kubectl get secret {{ include "ethnode.fullname" . }}-{{ .Values.global.network }}-{{ .Values.global.env }}-jwt --namespace {{ .Release.Namespace }} -o json > /dev/null 2>&1
              if [ $? -ne 0 ]; then
                kubectl create secret generic {{ include "ethnode.fullname" . }}-{{ .Values.global.network }}-{{ .Values.global.env }}-jwt --namespace {{ .Release.Namespace }} --from-file=jwtSecret.hex=/tmp/jwtSecret.hex 
              fi

              echo "{{ template "ethnode.fullname" . }} post-delete hook completed"

